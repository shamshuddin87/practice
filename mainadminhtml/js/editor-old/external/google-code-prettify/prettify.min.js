!function(){var e=null;window.PR_SHOULD_USE_CONTINUATION=!0,function(){function t(e){function t(e){var t=e.charCodeAt(0);if(92!==t)return t;var n=e.charAt(1);return(t=u[n])?t:n>="0"&&"7">=n?parseInt(e.substring(1),8):"u"===n||"x"===n?parseInt(e.substring(2),16):e.charCodeAt(1)}function n(e){return 32>e?(16>e?"\\x0":"\\x")+e.toString(16):(e=String.fromCharCode(e),"\\"===e||"-"===e||"]"===e||"^"===e?"\\"+e:e)}function i(e){var i=e.substring(1,e.length-1).match(/\\u[\dA-Fa-f]{4}|\\x[\dA-Fa-f]{2}|\\[0-3][0-7]{0,2}|\\[0-7]{1,2}|\\[\S\s]|[^\\]/g),e=[],a="^"===i[0],r=["["];a&&r.push("^");for(var a=a?1:0,o=i.length;o>a;++a){var s=i[a];if(/\\[bdsw]/i.test(s))r.push(s);else{var l,s=t(s);o>a+2&&"-"===i[a+1]?(l=t(i[a+2]),a+=2):l=s,e.push([s,l]),65>l||s>122||(65>l||s>90||e.push([32|Math.max(65,s),32|Math.min(l,90)]),97>l||s>122||e.push([-33&Math.max(97,s),-33&Math.min(l,122)]))}}for(e.sort(function(e,t){return e[0]-t[0]||t[1]-e[1]}),i=[],o=[],a=0;a<e.length;++a)s=e[a],s[0]<=o[1]+1?o[1]=Math.max(o[1],s[1]):i.push(o=s);for(a=0;a<i.length;++a)s=i[a],r.push(n(s[0])),s[1]>s[0]&&(s[1]+1>s[0]&&r.push("-"),r.push(n(s[1])));return r.push("]"),r.join("")}function a(e){for(var t=e.source.match(/\[(?:[^\\\]]|\\[\S\s])*]|\\u[\dA-Fa-f]{4}|\\x[\dA-Fa-f]{2}|\\\d+|\\[^\dux]|\(\?[!:=]|[()^]|[^()[\\^]+/g),a=t.length,s=[],l=0,c=0;a>l;++l){var d=t[l];"("===d?++c:"\\"===d.charAt(0)&&(d=+d.substring(1))&&(c>=d?s[d]=-1:t[l]=n(d))}for(l=1;l<s.length;++l)-1===s[l]&&(s[l]=++r);for(c=l=0;a>l;++l)d=t[l],"("===d?(++c,s[c]||(t[l]="(?:")):"\\"===d.charAt(0)&&(d=+d.substring(1))&&c>=d&&(t[l]="\\"+s[d]);for(l=0;a>l;++l)"^"===t[l]&&"^"!==t[l+1]&&(t[l]="");if(e.ignoreCase&&o)for(l=0;a>l;++l)d=t[l],e=d.charAt(0),d.length>=2&&"["===e?t[l]=i(d):"\\"!==e&&(t[l]=d.replace(/[A-Za-z]/g,function(e){return e=e.charCodeAt(0),"["+String.fromCharCode(-33&e,32|e)+"]"}));return t.join("")}for(var r=0,o=!1,s=!1,l=0,c=e.length;c>l;++l){var d=e[l];if(d.ignoreCase)s=!0;else if(/[a-z]/i.test(d.source.replace(/\\u[\da-f]{4}|\\x[\da-f]{2}|\\[^UXux]/gi,""))){o=!0,s=!1;break}}for(var u={b:8,t:9,n:10,v:11,f:12,r:13},h=[],l=0,c=e.length;c>l;++l){if(d=e[l],d.global||d.multiline)throw Error(""+d);h.push("(?:"+a(d)+")")}return RegExp(h.join("|"),s?"gi":"g")}function n(e,t){function n(e){var l=e.nodeType;if(1==l){if(!i.test(e.className)){for(l=e.firstChild;l;l=l.nextSibling)n(l);l=e.nodeName.toLowerCase(),("br"===l||"li"===l)&&(a[s]="\n",o[s<<1]=r++,o[s++<<1|1]=e)}}else(3==l||4==l)&&(l=e.nodeValue,l.length&&(l=t?l.replace(/\r\n?/g,"\n"):l.replace(/[\t\n\r ]+/g," "),a[s]=l,o[s<<1]=r,r+=l.length,o[s++<<1|1]=e))}var i=/(?:^|\s)nocode(?:\s|$)/,a=[],r=0,o=[],s=0;return n(e),{a:a.join("").replace(/\n$/,""),d:o}}function i(e,t,n,i){t&&(e={a:t,e:e},n(e),i.push.apply(i,e.g))}function a(e){for(var t=void 0,n=e.firstChild;n;n=n.nextSibling)var i=n.nodeType,t=1===i?t?e:n:3===i&&w.test(n.nodeValue)?e:t;return t===e?void 0:t}function r(n,a){function r(e){for(var t=e.e,n=[t,"pln"],d=0,u=e.a.match(s)||[],h={},f=0,p=u.length;p>f;++f){var v,m=u[f],g=h[m],b=void 0;if("string"==typeof g)v=!1;else{var y=o[m.charAt(0)];if(y)b=m.match(y[1]),g=y[0];else{for(v=0;l>v;++v)if(y=a[v],b=m.match(y[1])){g=y[0];break}b||(g="pln")}!(v=g.length>=5&&"lang-"===g.substring(0,5))||b&&"string"==typeof b[1]||(v=!1,g="src"),v||(h[m]=g)}if(y=d,d+=m.length,v){v=b[1];var x=m.indexOf(v),w=x+v.length;b[2]&&(w=m.length-b[2].length,x=w-v.length),g=g.substring(5),i(t+y,m.substring(0,x),r,n),i(t+y+x,v,c(g,v),n),i(t+y+w,m.substring(w),r,n)}else n.push(t+y,g)}e.g=n}var s,o={};!function(){for(var i=n.concat(a),r=[],l={},c=0,d=i.length;d>c;++c){var u=i[c],h=u[3];if(h)for(var f=h.length;--f>=0;)o[h.charAt(f)]=u;u=u[1],h=""+u,l.hasOwnProperty(h)||(r.push(u),l[h]=e)}r.push(/[\S\s]/),s=t(r)}();var l=a.length;return r}function o(t){var n=[],i=[];t.tripleQuotedStrings?n.push(["str",/^(?:'''(?:[^'\\]|\\[\S\s]|''?(?=[^']))*(?:'''|$)|"""(?:[^"\\]|\\[\S\s]|""?(?=[^"]))*(?:"""|$)|'(?:[^'\\]|\\[\S\s])*(?:'|$)|"(?:[^"\\]|\\[\S\s])*(?:"|$))/,e,"'\""]):t.multiLineStrings?n.push(["str",/^(?:'(?:[^'\\]|\\[\S\s])*(?:'|$)|"(?:[^"\\]|\\[\S\s])*(?:"|$)|`(?:[^\\`]|\\[\S\s])*(?:`|$))/,e,"'\"`"]):n.push(["str",/^(?:'(?:[^\n\r'\\]|\\.)*(?:'|$)|"(?:[^\n\r"\\]|\\.)*(?:"|$))/,e,"\"'"]),t.verbatimStrings&&i.push(["str",/^@"(?:[^"]|"")*(?:"|$)/,e]);var a=t.hashComments;if(a&&(t.cStyleComments?(a>1?n.push(["com",/^#(?:##(?:[^#]|#(?!##))*(?:###|$)|.*)/,e,"#"]):n.push(["com",/^#(?:(?:define|e(?:l|nd)if|else|error|ifn?def|include|line|pragma|undef|warning)\b|[^\n\r]*)/,e,"#"]),i.push(["str",/^<(?:(?:(?:\.\.\/)*|\/?)(?:[\w-]+(?:\/[\w-]+)+)?[\w-]+\.h(?:h|pp|\+\+)?|[a-z]\w*)>/,e])):n.push(["com",/^#[^\n\r]*/,e,"#"])),t.cStyleComments&&(i.push(["com",/^\/\/[^\n\r]*/,e]),i.push(["com",/^\/\*[\S\s]*?(?:\*\/|$)/,e])),a=t.regexLiterals){var o=(a=a>1?"":"\n\r")?".":"[\\S\\s]";i.push(["lang-regex",RegExp("^(?:^^\\.?|[+-]|[!=]=?=?|\\#|%=?|&&?=?|\\(|\\*=?|[+\\-]=|->|\\/=?|::?|<<?=?|>>?>?=?|,|;|\\?|@|\\[|~|{|\\^\\^?=?|\\|\\|?=?|break|case|continue|delete|do|else|finally|instanceof|return|throw|try|typeof)\\s*("+("/(?=[^/*"+a+"])(?:[^/\\x5B\\x5C"+a+"]|\\x5C"+o+"|\\x5B(?:[^\\x5C\\x5D"+a+"]|\\x5C"+o+")*(?:\\x5D|$))+/")+")")])}return(a=t.types)&&i.push(["typ",a]),a=(""+t.keywords).replace(/^ | $/g,""),a.length&&i.push(["kwd",RegExp("^(?:"+a.replace(/[\s,]+/g,"|")+")\\b"),e]),n.push(["pln",/^\s+/,e," \r\n	 "]),a="^.[^\\s\\w.$@'\"`/\\\\]*",t.regexLiterals&&(a+="(?!s*/)"),i.push(["lit",/^@[$_a-z][\w$@]*/i,e],["typ",/^(?:[@_]?[A-Z]+[a-z][\w$@]*|\w+_t\b)/,e],["pln",/^[$_a-z][\w$@]*/i,e],["lit",/^(?:0x[\da-f]+|(?:\d(?:_\d+)*\d*(?:\.\d*)?|\.\d\+)(?:e[+-]?\d+)?)[a-z]*/i,e,"0123456789"],["pln",/^\\[\S\s]?/,e],["pun",RegExp(a),e]),r(n,i)}function s(e,t,n){function i(e){var t=e.nodeType;if(1!=t||r.test(e.className)){if((3==t||4==t)&&n){var l=e.nodeValue,c=l.match(o);c&&(t=l.substring(0,c.index),e.nodeValue=t,(l=l.substring(c.index+c[0].length))&&e.parentNode.insertBefore(s.createTextNode(l),e.nextSibling),a(e),t||e.parentNode.removeChild(e))}}else if("br"===e.nodeName)a(e),e.parentNode&&e.parentNode.removeChild(e);else for(e=e.firstChild;e;e=e.nextSibling)i(e)}function a(e){function t(e,n){var i=n?e.cloneNode(!1):e,a=e.parentNode;if(a){var a=t(a,1),r=e.nextSibling;a.appendChild(i);for(var o=r;o;o=r)r=o.nextSibling,a.appendChild(o)}return i}for(;!e.nextSibling;)if(e=e.parentNode,!e)return;for(var n,e=t(e.nextSibling,0);(n=e.parentNode)&&1===n.nodeType;)e=n;c.push(e)}for(var r=/(?:^|\s)nocode(?:\s|$)/,o=/\r\n?|\n/,s=e.ownerDocument,l=s.createElement("li");e.firstChild;)l.appendChild(e.firstChild);for(var c=[l],d=0;d<c.length;++d)i(c[d]);t===(0|t)&&c[0].setAttribute("value",t);var u=s.createElement("ol");u.className="linenums";for(var t=Math.max(0,t-1|0)||0,d=0,h=c.length;h>d;++d)l=c[d],l.className="L"+(d+t)%10,l.firstChild||l.appendChild(s.createTextNode(" ")),u.appendChild(l);e.appendChild(u)}function l(e,t){for(var n=t.length;--n>=0;){var i=t[n];_.hasOwnProperty(i)?u.console&&console.warn("cannot override language handler %s",i):_[i]=e}}function c(e,t){return e&&_.hasOwnProperty(e)||(e=/^\s*</.test(t)?"default-markup":"default-code"),_[e]}function d(e){var t=e.h;try{var i=n(e.c,e.i),a=i.a;e.a=a,e.d=i.d,e.e=0,c(t,a)(e);var r=/\bMSIE\s(\d+)/.exec(navigator.userAgent),r=r&&+r[1]<=8,t=/\n/g,o=e.a,s=o.length,i=0,l=e.d,d=l.length,a=0,h=e.g,f=h.length,p=0;h[f]=s;var m,g;for(g=m=0;f>g;)h[g]!==h[g+2]?(h[m++]=h[g++],h[m++]=h[g++]):g+=2;for(f=m,g=m=0;f>g;){for(var b=h[g],v=h[g+1],y=g+2;f>=y+2&&h[y+1]===v;)y+=2;h[m++]=b,h[m++]=v,g=y}h.length=m;var w,x=e.c;x&&(w=x.style.display,x.style.display="none");try{for(;d>a;){var U,T=l[a+2]||s,_=h[p+2]||s,y=Math.min(T,_),k=l[a+1];if(1!==k.nodeType&&(U=o.substring(i,y))){r&&(U=U.replace(t,"\r")),k.nodeValue=U;var V=k.ownerDocument,E=V.createElement("span");E.className=h[p+1];var S=k.parentNode;S.replaceChild(E,k),E.appendChild(k),T>i&&(l[a+1]=k=V.createTextNode(o.substring(y,T)),S.insertBefore(k,E.nextSibling))}i=y,i>=T&&(a+=2),i>=_&&(p+=2)}}finally{x&&(x.style.display=w)}}catch(C){u.console&&console.log(C&&C.stack||C)}}var u=window,h=["break,continue,do,else,for,if,return,while"],f=[[h,"auto,case,char,const,default,double,enum,extern,float,goto,inline,int,long,register,short,signed,sizeof,static,struct,switch,typedef,union,unsigned,void,volatile"],"catch,class,delete,false,import,new,operator,private,protected,public,this,throw,true,try,typeof"],p=[f,"alignof,align_union,asm,axiom,bool,concept,concept_map,const_cast,constexpr,decltype,delegate,dynamic_cast,explicit,export,friend,generic,late_check,mutable,namespace,nullptr,property,reinterpret_cast,static_assert,static_cast,template,typeid,typename,using,virtual,where"],m=[f,"abstract,assert,boolean,byte,extends,final,finally,implements,import,instanceof,interface,null,native,package,strictfp,super,synchronized,throws,transient"],g=[m,"as,base,by,checked,decimal,delegate,descending,dynamic,event,fixed,foreach,from,group,implicit,in,internal,into,is,let,lock,object,out,override,orderby,params,partial,readonly,ref,sbyte,sealed,stackalloc,string,select,uint,ulong,unchecked,unsafe,ushort,var,virtual,where"],f=[f,"debugger,eval,export,function,get,null,set,undefined,var,with,Infinity,NaN"],b=[h,"and,as,assert,class,def,del,elif,except,exec,finally,from,global,import,in,is,lambda,nonlocal,not,or,pass,print,raise,try,with,yield,False,True,None"],v=[h,"alias,and,begin,case,class,def,defined,elsif,end,ensure,false,in,module,next,nil,not,or,redo,rescue,retry,self,super,then,true,undef,unless,until,when,yield,BEGIN,END"],y=[h,"as,assert,const,copy,drop,enum,extern,fail,false,fn,impl,let,log,loop,match,mod,move,mut,priv,pub,pure,ref,self,static,struct,true,trait,type,unsafe,use"],h=[h,"case,done,elif,esac,eval,fi,function,in,local,set,then,until"],x=/^(DIR|FILE|vector|(de|priority_)?queue|list|stack|(const_)?iterator|(multi)?(set|map)|bitset|u?(int|float)\d*)\b/,w=/\S/,T=o({keywords:[p,g,f,"caller,delete,die,do,dump,elsif,eval,exit,foreach,for,goto,if,import,last,local,my,next,no,our,print,package,redo,require,sub,undef,unless,until,use,wantarray,while,BEGIN,END",b,v,h],hashComments:!0,cStyleComments:!0,multiLineStrings:!0,regexLiterals:!0}),_={};l(T,["default-code"]),l(r([],[["pln",/^[^<?]+/],["dec",/^<!\w[^>]*(?:>|$)/],["com",/^<\!--[\S\s]*?(?:--\>|$)/],["lang-",/^<\?([\S\s]+?)(?:\?>|$)/],["lang-",/^<%([\S\s]+?)(?:%>|$)/],["pun",/^(?:<[%?]|[%?]>)/],["lang-",/^<xmp\b[^>]*>([\S\s]+?)<\/xmp\b[^>]*>/i],["lang-js",/^<script\b[^>]*>([\S\s]*?)(<\/script\b[^>]*>)/i],["lang-css",/^<style\b[^>]*>([\S\s]*?)(<\/style\b[^>]*>)/i],["lang-in.tag",/^(<\/?[a-z][^<>]*>)/i]]),["default-markup","htm","html","mxml","xhtml","xml","xsl"]),l(r([["pln",/^\s+/,e," 	\r\n"],["atv",/^(?:"[^"]*"?|'[^']*'?)/,e,"\"'"]],[["tag",/^^<\/?[a-z](?:[\w-.:]*\w)?|\/?>$/i],["atn",/^(?!style[\s=]|on)[a-z](?:[\w:-]*\w)?/i],["lang-uq.val",/^=\s*([^\s"'>]*(?:[^\s"'/>]|\/(?=\s)))/],["pun",/^[/<->]+/],["lang-js",/^on\w+\s*=\s*"([^"]+)"/i],["lang-js",/^on\w+\s*=\s*'([^']+)'/i],["lang-js",/^on\w+\s*=\s*([^\s"'>]+)/i],["lang-css",/^style\s*=\s*"([^"]+)"/i],["lang-css",/^style\s*=\s*'([^']+)'/i],["lang-css",/^style\s*=\s*([^\s"'>]+)/i]]),["in.tag"]),l(r([],[["atv",/^[\S\s]+/]]),["uq.val"]),l(o({keywords:p,hashComments:!0,cStyleComments:!0,types:x}),["c","cc","cpp","cxx","cyc","m"]),l(o({keywords:"null,true,false"}),["json"]),l(o({keywords:g,hashComments:!0,cStyleComments:!0,verbatimStrings:!0,types:x}),["cs"]),l(o({keywords:m,cStyleComments:!0}),["java"]),l(o({keywords:h,hashComments:!0,multiLineStrings:!0}),["bash","bsh","csh","sh"]),l(o({keywords:b,hashComments:!0,multiLineStrings:!0,tripleQuotedStrings:!0}),["cv","py","python"]),l(o({keywords:"caller,delete,die,do,dump,elsif,eval,exit,foreach,for,goto,if,import,last,local,my,next,no,our,print,package,redo,require,sub,undef,unless,until,use,wantarray,while,BEGIN,END",hashComments:!0,multiLineStrings:!0,regexLiterals:2}),["perl","pl","pm"]),l(o({keywords:v,hashComments:!0,multiLineStrings:!0,regexLiterals:!0}),["rb","ruby"]),l(o({keywords:f,cStyleComments:!0,regexLiterals:!0}),["javascript","js"]),l(o({keywords:"all,and,by,catch,class,else,extends,false,finally,for,if,in,is,isnt,loop,new,no,not,null,of,off,on,or,return,super,then,throw,true,try,unless,until,when,while,yes",hashComments:3,cStyleComments:!0,multilineStrings:!0,tripleQuotedStrings:!0,regexLiterals:!0}),["coffee"]),l(o({keywords:y,cStyleComments:!0,multilineStrings:!0}),["rc","rs","rust"]),l(r([],[["str",/^[\S\s]+/]]),["regex"]);var k=u.PR={createSimpleLexer:r,registerLangHandler:l,sourceDecorator:o,PR_ATTRIB_NAME:"atn",PR_ATTRIB_VALUE:"atv",PR_COMMENT:"com",PR_DECLARATION:"dec",PR_KEYWORD:"kwd",PR_LITERAL:"lit",PR_NOCODE:"nocode",PR_PLAIN:"pln",PR_PUNCTUATION:"pun",PR_SOURCE:"src",PR_STRING:"str",PR_TAG:"tag",PR_TYPE:"typ",prettyPrintOne:u.prettyPrintOne=function(e,t,n){var i=document.createElement("div");return i.innerHTML="<pre>"+e+"</pre>",i=i.firstChild,n&&s(i,n,!0),d({h:t,j:n,c:i,i:1}),i.innerHTML},prettyPrint:u.prettyPrint=function(t,n){function i(){for(var n=u.PR_SHOULD_USE_CONTINUATION?p.now()+250:1/0;m<l.length&&p.now()<n;m++){for(var r=l[m],c=_,h=r;h=h.previousSibling;){var f=h.nodeType,k=(7===f||8===f)&&h.nodeValue;if(k?!/^\??prettify\b/.test(k):3!==f||/\S/.test(h.nodeValue))break;if(k){c={},k.replace(/\b(\w+)=([\w%+\-.:]+)/g,function(e,t,n){c[t]=n});break}}if(h=r.className,(c!==_||v.test(h))&&!y.test(h)){for(f=!1,k=r.parentNode;k;k=k.parentNode)if(T.test(k.tagName)&&k.className&&v.test(k.className)){f=!0;break}if(!f){if(r.className+=" prettyprinted",f=c.lang,!f){var U,f=h.match(b);!f&&(U=a(r))&&w.test(U.tagName)&&(f=U.className.match(b)),f&&(f=f[1])}if(x.test(r.tagName))k=1;else var k=r.currentStyle,V=o.defaultView,k=(k=k?k.whiteSpace:V&&V.getComputedStyle?V.getComputedStyle(r,e).getPropertyValue("white-space"):0)&&"pre"===k.substring(0,3);V=c.linenums,(V="true"===V||+V)||(V=(V=h.match(/\blinenums\b(?::(\d+))?/))?V[1]&&V[1].length?+V[1]:!0:!1),V&&s(r,V,k),g={h:f,c:r,j:V,i:k},d(g)}}}m<l.length?setTimeout(i,250):"function"==typeof t&&t()}for(var r=n||document.body,o=r.ownerDocument||document,r=[r.getElementsByTagName("pre"),r.getElementsByTagName("code"),r.getElementsByTagName("xmp")],l=[],c=0;c<r.length;++c)for(var h=0,f=r[c].length;f>h;++h)l.push(r[c][h]);var r=e,p=Date;p.now||(p={now:function(){return+new Date}});var g,m=0,b=/\blang(?:uage)?-([\w.]+)(?!\S)/,v=/\bprettyprint\b/,y=/\bprettyprinted\b/,x=/pre|xmp/i,w=/^code$/i,T=/^(?:pre|code|xmp)$/i,_={};i()}};"function"==typeof define&&define.amd&&define("google-code-prettify",[],function(){return k})}()}();